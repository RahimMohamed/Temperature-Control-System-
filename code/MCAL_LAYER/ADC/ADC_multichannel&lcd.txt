/* 
 * File:   application.c
 * Author: Ahmed.Elghafar
 * https://www.linkedin.com/in/ahmedabdelghafarmohammed/
 * Created on November 28, 2020, 8:43 PM
 */

#include "main.h"


Std_ReturnType ret=E_NOT_OK;
  

uint_16 adc_res1,adc_res2,adc_res3,adc_res4;
uint_16 adc_disp1[6],adc_disp2[6],adc_disp3[6],adc_disp4[6];
uint_8 adc_req=0;
void ISR_ADC (void);

ADC_PIN _adc= {
  
    .ADC_InterruptHandler=ISR_ADC,
    .ANT= ADC_AN0,
    .Acq_Time=TAD_0,
    .Clock=FOSC_8,
    .Result_flag=1,
    .voltage_reference_flag=0,
};

lcd_4bit_t lcd1={
  .lcd_rs.direction=GPIO_OUTPUT,
  .lcd_rs.logic=LOW,
  .lcd_rs.port=PORTC_INDEX,
  .lcd_rs.pin=GPIO_PIN0,
  .lcd_en.direction=GPIO_OUTPUT,
  .lcd_en.logic=LOW,
  .lcd_en.port=PORTC_INDEX,
  .lcd_en.pin=GPIO_PIN1,
  .lcd_data[0].direction=GPIO_OUTPUT,
  .lcd_data[0].logic=LOW,
  .lcd_data[0].port=PORTC_INDEX,
  .lcd_data[0].pin=GPIO_PIN2,
  .lcd_data[1].direction=GPIO_OUTPUT,
  .lcd_data[1].logic=LOW,
  .lcd_data[1].port=PORTC_INDEX,
  .lcd_data[1].pin=GPIO_PIN3,
  .lcd_data[2].direction=GPIO_OUTPUT,
  .lcd_data[2].logic=LOW,
  .lcd_data[2].port=PORTC_INDEX,
  .lcd_data[2].pin=GPIO_PIN4,
  .lcd_data[3].direction=GPIO_OUTPUT,
  .lcd_data[3].logic=LOW,
  .lcd_data[3].port=PORTC_INDEX,
  .lcd_data[3].pin=GPIO_PIN5,
  
};

int main() { 
    
    
    ADC_Init(&_adc);
    lcd_4bit_intialize(&lcd1);
    
    
    lcd_4bit_send_string_pos(&lcd1,2,7,"ADC Test");
    __delay_ms(2000);
    lcd_4bit_send_command(&lcd1,_LCD_CLEAR);
    __delay_ms(50);
    
    lcd_4bit_send_string_pos(&lcd1,1,1,"POT1: ");
    lcd_4bit_send_string_pos(&lcd1,2,1,"POT2: ");
    lcd_4bit_send_string_pos(&lcd1,3,1,"POT3: ");
    lcd_4bit_send_string_pos(&lcd1,4,1,"POT4: ");
    
    while (1){
      
        if(adc_req ==0){
        ADC_GetConversion_Interrupt(&_adc,ADC_AN0);
         
        }
        else if(adc_req ==1){
        ADC_GetConversion_Interrupt(&_adc,ADC_AN1);
        
        }
        else if(adc_req ==2){
        ADC_GetConversion_Interrupt(&_adc,ADC_AN2);
        
        }
        else if(adc_req ==3){
        ADC_GetConversion_Interrupt(&_adc,ADC_AN3);
        
        }
        
        
        
        
        
        convert_short_to_string(adc_res1,adc_disp1);
        convert_short_to_string(adc_res2,adc_disp2);
        convert_short_to_string(adc_res3,adc_disp3);
        convert_short_to_string(adc_res4,adc_disp4);
        
        
        
       
       lcd_4bit_send_string_pos(&lcd1,1,7,adc_disp1);
       lcd_4bit_send_string(&lcd1,"  ");
       lcd_4bit_send_string_pos(&lcd1,2,7,adc_disp2);
       lcd_4bit_send_string(&lcd1,"  ");
       lcd_4bit_send_string_pos(&lcd1,3,7,adc_disp3);
       lcd_4bit_send_string(&lcd1,"  ");
       lcd_4bit_send_string_pos(&lcd1,4,7,adc_disp4);
       lcd_4bit_send_string(&lcd1,"  ");
    }
   
   
    return (EXIT_SUCCESS);
}


void ISR_ADC (void){
   
     if(adc_req ==0){
        ADC_GetResult(&_adc,&adc_res1);
         adc_req=1;
        }
     else if(adc_req ==1){
        ADC_GetResult(&_adc,&adc_res2);
        adc_req=2;
       }
      else if(adc_req ==2){
        ADC_GetResult(&_adc,&adc_res3);
        adc_req=3;
       }
      else if(adc_req ==3){
        ADC_GetResult(&_adc,&adc_res4);
        adc_req=0;
       }
   
    
}



